.fullScreen {
  width: 100vw;
  height: 100vh;
  display: flex;
  flex-direction: column;
   background: linear-gradient(to bottom, #ede7f6, #d1c4e9); /* morado claro */
}

.container {
  background: linear-gradient(to bottom, #ede7f6, #d1c4e9); /* morado claro */
  width: 100%;
  height: 90%;
  padding: 1em;
  display: flex;
  gap: 1em;
}


.col_left {
  flex: 1.4;
  border-radius: 2em;
  display: flex;
  flex-direction: row;
  gap: 1em;
}

.col_right {
  flex: 1;
  border-radius: 2em;
  display: flex;
  flex-direction: column;
  gap: 1em;
}

.row {
  flex: 1;
  border-radius: 2em;
}

.row1 {
  background: linear-gradient(145deg, #6f42c1, #8e5de8);
  text-decoration: none;
  color: white;
  padding: 2em;
  border-radius: 2em;
  overflow: hidden;
  position: relative;
  box-shadow: 0 10px 25px rgba(111, 66, 193, 0.3);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.row1:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 35px rgba(111, 66, 193, 0.45);
  cursor: pointer;
}

.row1::before {
  content: "";
  position: absolute;
  top: -20%;
  right: -20%;
  width: 150px;
  height: 150px;
  background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 80%);
  transform: rotate(45deg);
  pointer-events: none;
}



.quien {
  background: linear-gradient(145deg, #6f42c1, #8e5de8);
  color: white;
  border-radius: 2em;
  padding: 2em;
  width: 350px;
  height: 640px;
  margin: 0 auto;
  position: relative;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.quien:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 35px rgba(111, 66, 193, 0.4);
  cursor: pointer;
}

.quien::before {
  content: "";
  position: absolute;
  top: -20%;
  right: -20%;
  width: 150px;
  height: 150px;
  background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 80%);
  transform: rotate(45deg);
  pointer-events: none;
}



.tituloCard {
  font-size: 1.4em;
  font-weight: bold;
  margin-bottom: 0.5em;
}


.textoCard {
  font-size: 1em;
  line-height: 1.5;
  margin-bottom: 1.5em;
}
.marcoImagenquien {
  background-color:transparent;
  
  border-radius: 1em;
  
  width: 32px;
  height: 420px;
  display: flex;
  align-items: center;
  justify-content: center;

  position: absolute; 
  bottom: -50px;     
  left: 50%;
  transform: translateX(-50%);
  z-index: 1;
  bottom: 20px;
}

.imagenCard {
  width: 400px;
  height: 400px;
  object-fit: contain;
  display: block;
  border-radius: 50%;
}

.descubre {
  background: linear-gradient(145deg, #6f42c1, #8e5de8);
  color: white;
  border-radius: 2em;
  
  padding: 2em;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  height: 300px;
  gap: 1.5em;
  position: relative;
  overflow: hidden;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.descubre:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 35px rgba(111, 66, 193, 0.4);
  cursor: pointer;
}

.descubre::before {
  content: "";
  position: absolute;
  top: -20%;
  right: -20%;
  width: 150px;
  height: 150px;
  background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 80%);
  transform: rotate(45deg);
  pointer-events: none;
}


.tendencia {
  width: 100%;
}

.textoTendencia {
  flex: 1;
  text-align: left;
  display: flex;
  flex-direction: column;
  justify-content: center;
  height: 100%;
}


.tituloCard {
  font-size: 1.3em;
  font-weight: bold;
  margin-bottom: 0.5em;
}

.textoCard {
  font-size: 1em;
  line-height: 1.4;
  padding-right: 1em;
}

.marcoImagen {
  background-color: transparent;
  border-radius: 1em;
  width: 200px;
  height: 300px;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  position: relative;
}


.imagen {
  width: 200px;
  height: 300px;
  object-fit: cover;
  border-radius: 1.5em;
}


.row.bottom {
  background: linear-gradient(145deg, #6f42c1, #8e5de8);
  color: white;
  border-radius: 2em;
  padding: 2em;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  height: 300px;
  gap: 1.5em;
  max-width: 4500px;
  text-decoration: none;
  position: relative;
  overflow: hidden;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.row.bottom:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 35px rgba(111, 66, 193, 0.4);
  cursor: pointer;
}

.row.bottom::before {
  content: "";
  position: absolute;
  top: -20%;
  right: -20%;
  width: 150px;
  height: 150px;
  background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 80%);
  transform: rotate(45deg);
  pointer-events: none;
}







.bottom {
  background-color: #6f42c1;
}

.rotateImage {
  width: 250px;           /* Puedes ajustar este valor */
  height: auto;           /* Altura automática según el ancho */
  transform: rotate(45deg);
  object-fit: contain;    /* Para que no se deforme la imagen */
  display: block;
  margin: 0 auto;         /* Centra horizontalmente si es necesario */
}


.loginButton {
  display: inline-block;
  background-color: #6f42c1;
  border: 1px solid #6f42c1;
  text-decoration: none;
  color: white;
  text-align: center;
  padding: 10px 10px;
  border-radius: 10px;
  font-size: 16px;
  font-weight: bold;
  transition: background-color 0.3s, border-color 0.3s;
}

.loginButton:hover {
  background-color: #643faa;
  border-color: #643faa;
  color: white;
}
/*
 kpi, críticas, clientes cantidad(evalución de proyecto), stock(disponible, y evalucion de almacenamiento )

1. Box Model (modelo de caja)
width: define el ancho del elemento.

height: define el alto.

padding: espacio interno entre el contenido y el borde.

margin: espacio externo, separa el elemento de otros.

border: borde del elemento.

 2. Positioning (posicionamiento)
position: static: (por defecto) el elemento fluye de forma natural en el documento.

position: relative: se mueve respecto a su posición original.

position: absolute: se posiciona respecto al padre más cercano con relative.

position: fixed: se posiciona respecto a la pantalla, no se mueve al hacer scroll.

top, right, bottom, left: indican cuántos píxeles alejarse del borde definido (solo si no es static).

 3. Flexbox (distribución flexible)
display: flex: activa Flexbox.

flex-direction: define si los elementos se organizan en fila (row) o columna (column).

justify-content: alinea los elementos en el eje principal (horizontal si es row).

valores: flex-start, center, space-between, space-around, etc.

align-items: alinea en el eje cruzado (vertical si es row).

gap: espacio entre los hijos del flex container.

 4. Color y fondo
background-color: color de fondo del elemento.

color: color del texto.

background-image: imagen de fondo.

background-size: cover: hace que la imagen cubra todo el contenedor.

opacity: define transparencia (0 = invisible, 1 = opaco).

 5. Texto
font-size: tamaño de fuente.

font-weight: grosor de la fuente (normal, bold, 100-900).

text-align: alineación del texto (left, center, right).

line-height: altura entre líneas de texto.

6. Bordes y esquinas
border: define grosor, tipo y color del borde.

Ej: 2px solid red

border-radius: redondea las esquinas.

Ej: border-radius: 10px → esquinas redondas.

 7. Imágenes
object-fit: cover: recorta la imagen para llenar el contenedor sin deformarse.

object-fit: contain: ajusta la imagen para que quepa entera sin recorte.

 8. Z-index
z-index: determina cuál elemento va delante si se superponen (solo funciona con position distinto de static).

Mayor valor = más arriba.

 9. Transiciones y animaciones
transition: suaviza los cambios entre estados.

Ej: transition: transform 0.3s ease;

transform: scale(1.05): agranda un poco el elemento. */